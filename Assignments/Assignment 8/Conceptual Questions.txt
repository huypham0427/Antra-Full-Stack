1. Describe the problem generics address.
 problem of type safety and code reusability
 allowing us to create classes, structures, interfaces, and methods that can work with any data type, 
 without requiring us to define the type at compile time

2. How would you create a list of strings, using the generic List class?
List<string> myStringList = new List<string>();

3. How many generic type parameters does the Dictionary class have?
two generic type parameters: TKey and TValue.

4. True/False. When a generic class has multiple type parameters, they must all match. => True

5. What method is used to add items to a List object?
The Add() method is used to add items to a List object.

6. Name two methods that cause items to be removed from a List.
Remove() and RemoveAt()

7. How do you indicate that a class has a generic type parameter?
the type parameter inside angle brackets after the class name
public class MyClass<T>

8. True/False. Generic classes can only have one generic type parameter. => False
9. True/False. Generic type constraints limit what can be used for the generic type. => True
10. True/False. Constraints let you use the methods of the thing you are constraining to. => True